<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BookMapper">

    <!--도서정보입력-->
    <insert id="insertBook" parameterType="book">
INSERT INTO BOOK(isbn, publisher_number, genre, total_page, price, title, stock, author, publication_date,
                         content, keyword)
        VALUES (#{isbn}, #{publisherNumber}, #{genre}, #{totalPage}, #{price}, #{title}, #{stock}, #{author},
                #{publicationDate}, #{content}, #{keyword})
    </insert>

    <!--도서 리스트-->
    <select id="bookList" resultMap="getBook">
        	<![CDATA[
        SELECT *
        FROM book
        ORDER BY ISBN DESC
        ]]>
    </select>

    <!--선택한 ISBN의 도서정보-->
    <select id="selectBook" resultType="book">
        	<![CDATA[
        SELECT *
        FROM book
        WHERE ISBN = #{isbn}
        ]]>
    </select>

    <!--선택한 ISBN의 도서정보 삭제-->
    <delete id="deleteBook" parameterType="book">
         	<![CDATA[
        DELETE
        FROM book
        WHERE ISBN = #{isbn}
        ]]>
    </delete>

    <!--선택한 ISBN의 도서정보 업데이트-->
    <update id="updateBook" parameterType="book">
       <![CDATA[
        UPDATE book
        SET PRICE= #{price},
            CONTENT= #{content}
        WHERE ISBN = #{isbn}
        ]]>
    </update>



    <!--메뉴에서 선택한 종류의 책정보 리스트-->
    <select id="genrebookList" parameterType="String" resultType="book">
                	<![CDATA[
        SELECT * FROM book WHERE GENRE = #{GENRE}
        ]]>
    </select>



    <select id="searchBook" parameterType="hashmap" resultMap="getBook">
        SELECT * FROM BOOK
        <where>
            <!--
            title like #{keyword} or
            author like #{keyword} or
            genre like #{keyword} or
            keyword like #{keyword}-->
            <choose>
                <when test='sbox == "title"'>
                    title like '%'||#{find}||'%'
                </when>
                <when test='sbox == "author"'>
                    author like '%'||#{find}||'%'
                </when>
                <when test='sbox == "genre"'>
                    genre like '%'||#{find}||'%'
                </when>
                <when test='sbox == "keyword"'>
                    keyword like '%'||#{find}||'%'
                </when>
                <otherwise>
                    title like '%'||#{find}||'%'
                    or
                    author like '%'||#{find}||'%'
                    or
                    genre like '%'||#{find}||'%'
                    or
                    keyword like '%'||#{find}||'%'
                </otherwise>
            </choose>

        </where>
    </select>

    <select id="getGenreSalesList" resultType="map">
        select b.genre genre, s.AMOUNT_PRICE price
        from SALES_DATA s INNER JOIN BOOK B on s.isbn = B.ISBN
    </select>

    <select id="carouselBook" resultType="book">
        <![CDATA[
        SELECT isbn,title, author,publication_date
        FROM (select * from BOOK
        ORDER BY PUBLICATION_DATE desc)
        Where rownum <=10
        ]]>
    </select>

    <select id="bestBook" resultMap="getBook">
        <![CDATA[
        SELECT s.isbn isbn, s.amountquantity amountquantity, b.title
        FROM(select isbn, SUM(amount_quantity) amountquantity
             from sales_Data
             GROUP BY ISBN
             ORDER BY SUM(amount_quantity) DESC) s
                INNER JOIN book b on s.isbn=b.isbn
        WHERE rownum<=3
        ]]>

    </select>

    <select id="hotBook" resultMap="getBook">
        <![CDATA[
        SELECT *
        FROM book b
                 INNER JOIN(SELECT isbn, sum(amount_quantity) amountquantity, sum(amount_price) amountprice
                            FROM sales_data sd
                                     INNER JOIN(SELECT pb.order_number
                                                FROM purchase_book pb
                                                         INNER JOIN(SELECT *
                                                                    FROM purchase p
                                                                             INNER JOIN(SELECT *
                                                                                        FROM member
                                                                                        WHERE (to_char(sysdate,'yyyy')+1 -(substr(jumin1,0,2)+
                                                                                                                           (case
                                                                                                                                when substr(jumin2,0,1) <3 then 1900
                                                                                                                                when substr(jumin2,0,1) >=3 then 2000
                                                                                                                               end))) between 30 and 39) m
                                                                                       ON m.tel = p.membertel
                                                                    WHERE STATE='결제완료')P
                                                                   ON pb.order_number = p.order_number) pb
                                               ON sd.order_number=pb.order_number
                            GROUP BY ISBN
                            ORDER BY amountquantity desc) sd
                           ON b.isbn=sd.isbn
        ]]>
    </select>

    <resultMap id="salesData" type="salesdata">
        <result property="isbn" column="isbn"/>
        <result property="amountQuantity" column="amount_quantity"/>
        <result property="amountPrice" column="amount_price"/>
    </resultMap>


    <resultMap id="getBook" type="book">
        <result property="isbn" column="isbn"/>
        <result property="publisherNumber" column="publisher_number"/>
        <result property="genre" column="genre"/>
        <result property="totalPage" column="total_page"/>
        <result property="price" column="price"/>
        <result property="title" column="title"/>
        <result property="stock" column="stock"/>
        <result property="author" column="author"/>
        <result property="publicationDate" column="publication_date"/>
        <result property="content" column="content"/>
        <result property="keyword" column="keyword"/>
        <result property="image" column="image"/>

        <collection property="salesDataVO" resultMap="salesData"/>
    </resultMap>

</mapper>
