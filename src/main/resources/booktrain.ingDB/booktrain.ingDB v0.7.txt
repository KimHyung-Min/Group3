-- 수정 내용
-- purchase T ship_address, cancel_date 추가 (v0.5)
-- cancel_book T 추가, review T score, review_number(PK) 컬럼 추가 (v0.6)

-- v0.7
-- book T title varchar2(30) -> varchar2(100) 변경
-- customer_service 추가
-- 시퀀스 seq_origin_id, seq_article_id 추가
alter table purchase add pay_point number(10);


create table manager ( id varchar2(20) primary key,
                       password varchar(20) not null);

create table Member( tel varchar2(13) primary key,
                     name varchar2(10) not null,
                     id varchar2(20) not null unique,
                     jumin1 varchar2(6) not null,
                     jumin2 varchar2(7) not null UNIQUE,
                     email varchar2(50) not null UNIQUE,
                     domain varchar2(50) not null,
                     password varchar2(20) not null,
                     addr1 varchar(200) not null,
                     addr2 varchar(200) not null,
                     addr3 varchar(200),
                     grade varchar(10) default '일반',
                     point number (10) default 0);

create table nonmember(tel varchar2(13) primary key,
                       name varchar2(10) not null,
                       email varchar2(50) not null UNIQUE,
                       domain varchar2(50) not null,
                       addr1 varchar(200) not null,
                       addr2 varchar(200) not null,
                       addr3 varchar(200),
                       password varchar2(20) not null);

create table customer_service ( ORIGIN_ID number(10),         //글 내부번호.답글달면 증가안함.
                                replyId number(10) DEFAULT 0,   //답글번호
                                article_id number(10),     //글번호 무조건 증가
                                writing_time date,
                                title VARCHAR2(100) not null,
                                content varchar2(300),
                                tel varchar2(13),   //회원 전화번호.
                                id varchar2(20),   //비회원용 아이디 안쓸듯?
                                read_count number(10) default 0,
                                constraint customer_service_fk_tel foreign key(tel)
                                    references member(tel),
                                constraint customer_service_fk_id foreign key(id)
                                    references manager(id)
                                    );

create table publisher( publisher_number varchar2(3) primary key,
                        publisher_name varchar(20) not null,
                        address varchar(50) not null,
                        tel varchar2(13) not null,
                        url varchar2(50));

create table book ( ISBN varchar2(13) primary key,
                    publisher_number varchar2(3),
                    genre varchar(40) not null,
                    total_page number(4) not null,
                    price number(10) not null,
                    title varchar2(100) not null,
                    stock number(3) not null,
                    author varchar2(20) not null,
                    publication_date date not null,
                    content varchar2(1000) not null,
                    keyword varchar2(50),
                    constraint book_fk_publisher_number foreign key(publisher_number)
                        references publisher(publisher_number));

create table shopping_cart ( tel varchar2(13),
                             isbn varchar2(13),
                             quantity number(5) not null,
                             constraint shopping_cart_fk_tel foreign key(tel)
                                 references member(tel),
                             constraint shopping_cart_fk_isbn foreign key(isbn)
                                 references book(isbn)
                                 on delete cascade);

create table purchase ( order_number varchar2(10) primary key,
                        receiver varchar2(10) not null,
                        membertel varchar2(13),  --회원전화번호
                        nonmembertel varchar2(13), --비회원전화번호
                        state varchar2(10) not null, -- 상태
                        total_price number(10) not null,
                        purchase_date date not null,
                        cancel_date date,
                        ship_address varchar2(600) not null,
                        pay_point number(10),
                        -- 고민해보자 expected_delivery_date date,
                        constraint purchase_fk_membertel foreign key(membertel)
                            references member(tel),
                        constraint purchase_fk_nonmembertel foreign key(nonmembertel)
                            references nonmember(tel));

create table payment (order_number varchar2(10),
                      payment_method varchar2 (20) not null, -- 결제 방식
                      payment_state varchar2(20) not null, -- 결제 상태
                      constraint payment_fk_order_number foreign key(order_number)
                          references purchase(order_number));

create table review (review_number varchar2(10) primary key,
                    order_number varchar2(10),
                    isbn varchar2(13),
                     writing_time date,
                     content varchar2(500),
                     score number(2,1) not null,
                     constraint review_fk_order_number foreign key(order_number)
                     references purchase(order_number),
                     constraint review_fk_isbn foreign key(isbn)
                     references book(isbn));

create table purchase_book ( order_number varchar2(10),
                            ISBN varchar2(13),
                            quantity number(5) not null,
                            constraint purchase_book_pk_orderNumIsbn primary key(order_number,isbn),
                            constraint purchase_book_fk_orderNum foreign key(order_number)
                            references purchase(order_number),
                            constraint purchase_book_fk_isbn foreign key(isbn)
                            references book(isbn));

create table sales_data (order_number varchar2(10),
                        isbn varchar2(13),
                         amount_price varchar2(13) not null,
                         amount_quantity number(10) not null,
                         constraint sales_data_fk_orderNum foreign key(order_number,isbn)
                         references purchase_book(order_number,isbn));

create table cancel_book ( order_number varchar2(10),
                            ISBN varchar2(13),
                            quantity number(5) not null,
                            constraint cancel_book_pk_orderNumIsbn primary key(order_number,isbn),
                            constraint cancel_book_fk_orderNum foreign key(order_number)
                            references purchase(order_number),
                            constraint cancel_book_fk_isbn foreign key(isbn)
                            references book(isbn));

create sequence seq_order_number;

create sequence seq_publisher_number;

create sequence seq_order_id;

create sequence seq_origin_id;
create sequence seq_article_id;